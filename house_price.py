# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kkm4I8fjG_gZhrp7ryCzUyMz-WsLAnJJ
"""

import pandas as pd

file_path = "/content/drive/MyDrive/Colab Notebooks/data_assignment2.csv"
data = pd.read_csv(file_path, delimiter=';')
data.head()

colums_to_clean=['price','bedrooms','bathrooms','floors']

for column in colums_to_clean:
  data[column] = data[column].str.replace(',','.').astype(float)



data.dtypes

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(10,7))
sns.histplot(data['price'],kde=True)
plt.title('Distribution of House Prices')
plt.xlabel('Price')
plt.ylabel('Frequency')
plt.show()

# Convert 'date' column to datetime objects
data['date'] = pd.to_datetime(data['date'])

# Extract numerical features for correlation
numerical_features = data.select_dtypes(include=['number'])

# Calculate correlation matrix on numerical features only
correlation_matrix = numerical_features.corr()

plt.figure(figsize=(10,6))
sns.heatmap(correlation_matrix,annot=True,cmap='coolwarm',fmt='.2f')
plt.title('Correlation Matrix')
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import StandardScaler

#Selecting features and target
X=data[['sqft_living','bathrooms']]
y=data['price']

#Scaling the features
scaler=StandardScaler()
X_scaled=scaler.fit_transform(X)

#Splkiting the dataset into train of 80% and test set 0f 20%
X_train,X_test,y_train,y_test=train_test_split(X_scaled,y,test_size=0.2,random_state=42)

#storing and fiting the model
model=LinearRegression()
model.fit(X_train,y_train)

#Making prediction on tthe target for the testing set
y_pred=model.predict(X_test)

#Evaluating the model
mse=mean_squared_error(y_test,y_pred)
r2=r2_score(y_test,y_pred)

print(f'Mean Squared Error: {mse}')
print(f'R-squared: {r2}')

"""**Model Evaluation and Conclusion**
Here are the results of the Model I used


*   **Mean Squared Error (MSE)**: 9.91 x 10**11
*  **R-squared** : 0.028
The MSE is quite large which means that the predited house prices are significantly off from the actual values. with an R-square of only **0.028** , the model explains just 2.8% of the variance in the house price, indicating that it does not do a great at prediccting  prices using only the **sqft_living** and **bathrooms**.

**USER REQUIREMENT** **AND** **SOLUTION**

**Requirement** : To predict House prices using key property features

**Solution** I created a regression model using two feautures **(sqft_living and bathrooms)** that perfectedly correlated with the target (**price**) as seen from the correlation matrix above. How ever, the model didnot perform as expected , likely because the two feautues alone dont fully capture the complexity of house pricing.
"""